#this is out
/* 
	Copyright (c) 2018 Azeez Adewale <azeezadewale98@gmail.com> 
	MIT License Copyright (c) 2018 simple-lang
*/

/* 
 * @Filename - minifysimplesource.sim
 * @Author - Azeez Adewale
 * @Date - 09 August 2018
 * @Time - 10:55 PM
 */
 
call "simple/io/File.sim"
call "simple/debugging/Throw.sim"
call "simple/core/String.sim"
call "simple/utilities/Type.sim"
 
block main()
	sourceFile = null
	sourceFilePath = null
	sourceFileContent = null
	cmdparamsLen = lengthOf(cmdparams)
	for a = 0 to cmdparamsLen {
		if cmdparams[a] == "-s" || cmdparams[a] == "--source" { sourceFilePath = cmdparams[a++]
		else }
	}
	if sourceFilePath != null {
		sourceFile = new File(sourceFilePath)
		if sourceFile.exists() {
			sourceFileContent = sourceFile.readFileAsString()
			@sourceFile.absolutePath()
			value = minifySource(sourceFileContent)
			file = new File("./test.sim") 
			file.write(value)
		else
			throw(sourceFile.absolutePath()+" : does not exists")
		}
		
	}
	
block minifySource(source)
	minifiedSource = ""
	type = 1
	sourceLen = lengthOf(source)
	for i = 0 to sourceLen {
		if type == 0 and source[i] == tab or source[i] == nl or source[i] == crlf or source[i] == cr {
			if isWhiteSpace(source[i+1]) or isPunctuation(source[i+1]) {
				minifiedSource += "" 
			else
				minifiedSource += " " 
			}
		elif type == 0 and isPunctuation(source[i]) and (source[i] != "/" and source[i+1] != "*")
			if isWhiteSpace(source[i+1]) {
				minifiedSource += source[i]
				i++
			else
				minifiedSource += source[i]
			}
		elif type == 1 
			if source[i] == '*' and source[i+1] == '/' and (source[i+2] != '"' or source[i+2] != "'") {
				i++ type = 0
			else 
				
			}
		elif source[i] == '/' and source[i+1] == '*' and type == 0 
			i++
			type = 1
		elif type == 0 and source[i] == "#" and source[i+1] != '"' 
			while source[i+1] != cr {
				if i < sourceLen {
					i++
				else 
					
				}
			}
		else
			minifiedSource+= source[i]
		}
		
	}
	return trimString(minifiedSource)

block nextCharacter_(source)
	name = "this is testing   sas    "


