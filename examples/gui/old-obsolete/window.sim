/* 
	Copyright (c) 2018 Azeez Adewale <azeezadewale98@gmail.com> 
	MIT License Copyright (c) 2018 simple 

*/

/*
	The FWindow demo program. It create five window object and call show() 
	to add the object to FApp queue. If the show() is not called on the 
	window object the it wont be displayed when the FApp.run() is called.
	Multiple instance of the window object can be created at once and the
	default callback option is defined in the FLTK Library. If more windows
	are opened at once the app wont exit else all the windows are closed.
	Or else a new callback/onclick/onexit exit block is assigned to one of
	of the opened window

*/

call "fulltick/widget/FWindow.sim" import fulltick.widget
call "fulltick/painting/FColor.sim" import fulltick.painting
call "fulltick/core/FApp.sim" import fulltick.core

block main()
	#first window 
	new FWindow { 
		setBackground(FColor.RED())
		setTitle("Window 1 : WIDE")
		setTooltip("TOOLTIP : This is a test/demo window ")
		setSize(1010, 100)
		show()
		setLocation(20,20)
		notifyWidget()
	}
	
	
	#second window
	window2 = new FWindow()
	window2.setTitle("Window 2 : LONG")
	window2.setSize(300, 583)
	window2.setBackground(FColor.BLUE())
	window2.show()
	window2.setLocation(1040,18)
	
	#third window
	window3 = new FWindow()
	window3.setTitle("Window 3 : MODERATE")
	window3.setSize(500, 450)
	window3.setBackground(FColor.GREEN())
	window3.show()
	window3.setLocation(20,150)
	window3.setIcon("window.ico")
	
	#fourth window
	window4 = new FWindow()
	window4.setTitle("Window 4 : FIT")
	window4.setSize(500, 250)
	window4.setBackground(FColor.YELLOW())
	window4.show()
	window4.setLocation(530,150)
	
	#fifth window
	window5 = new FWindow()
	window5.setTitle("Window 5 : FIT II")
	window5.setSize(500, 165)
	window5.setBackground(FColor.CYAN())
	window5.show()
	window5.setLocation(530,435)
	
	#sixth window
	window6 = new FWindow()
	window6.setTitle("Window 6 : STRETCH")
	window6.setSize(1315, 55)
	window6.setBackground(FColor.MAGENTA())
	window6.show()
	window6.setLocation(20,635)
	
	#show all window
	FApp.run() 
	
/*

*/



/*

*/
call simple.core.Object
call simple.utilities.Console
call simple.graphics.Dimension
call simple.graphics.Rectangle
call simple.graphics.Point
call "../../../widgets/FWindow.sim" import fulltick.widgets
call "../../../widgets/FGroup.sim" import fulltick.widgets
call "../../../widgets/FButton.sim" import fulltick.widgets
call "../../../base/FWidget.sim" import fulltick.base
call "../../../FApp.sim" import fulltick

fwindow = null
fullscreenButton = null
borderButton = null
rectangle = new Rectangle(500,200,200,200)
i = 0
f = false

block main() 
    fwindow = new FWindow() { 
        fullscreenButton = new FButton("Fullscreen") 
        fullscreenButton.callbackOnClick("operate('fullscreen')")
        add(fullscreenButton)

        borderButton = new FButton("Disable Border") 
        borderButton.callbackOnClick("operate('border')")
        #add(borderButton) 

        resize(rectangle)
        #HasWindowBorder = false 
        #Fullscreen = true
        Title = "Hello World"
        #Cursor = FCursor.FL_CURSOR_WAIT
    }
    stdout.println("Index of fullscreenButton : "+fwindow.findWidgetIndex(fullscreenButton))
    stdout.println("Window has Border : "+fwindow.HasWindowBorder)
    stdout.println("Window is Fullscreen : "+fwindow.Fullscreen)
    stdout.println("Window title : "+fwindow.Title)
    stdout.println(fwindow.Cursor)
    stdout.print("Window : X="+fwindow.X+", Y="+fwindow.X+", Width="+fwindow.Width+", Height="+fwindow.Height+", ")
    stdout.println("Decorated Height="+fwindow.decoratedHeight()+", Decorated Width="+fwindow.decoratedWidth())
    fwindow.icon(null) 
    fwindow.show() 
    #FApp.scheme("gleam")
    FApp.run()
    
block operate(op)
    if op == "fullscreen" {
        /*if fwindow.Fullscreen {
            fwindow.Fullscreen = false
            __Fl_Widget_label_1(fullscreenButton.Ptr,"Enable Fullscreen")
        else
            fwindow.Fullscreen = true
            __Fl_Widget_label_1(fullscreenButton.Ptr,"Disable Fullscreen")
        } */
        #FApp.scheme("gtk+")
        /*win = __Fl_Window(400,350, "Yes")
        #__Fl_Window_set_modal(win)
        __Fl_Window_show(win)  
        #__Fl_Fl_modal()
        if fwindow.IsModal {
            fwindow.clearModalStates() 
        else
            fwindow.IsModal = true 
        }
        stdout.println(fwindow.Modality == FWindowModality.MODAL) */
        #stdout.println(fwindow.isShown())
        #fwindow.sizeRange(100,500,50,500)
        stdout.println(""+fwindow.X + " " + fwindow.Y)
        if f == true 
            point1 = new Point(fwindow.XRoot,fwindow.YRoot)
            rectangle.setPoint(point1) 
            f = false
        end
        rectangle.grow(2,2)
        fwindow.resize(rectangle)
        #fwindow.MaxHeight =  (fwindow.MaxHeight+100)
        #stdout.println(fwindow.MaxHeight)
    elif op == "border"
        if fwindow.HasWindowBorder {
            fwindow.HasWindowBorder = false
            __Fl_Widget_label_1(fullscreenButton.Ptr,"Enable Border")
        else
            fwindow.HasWindowBorder = true
            __Fl_Widget_label_1(fullscreenButton.Ptr,"Disable Border")
        }
    }