module archive.zip call "archive/loadarchiver.sim" call "archive/zip/ZipMode.sim"  block isZipStream(zipStream) try  zipStream.isZip() return true catch  return false end block addFileToZip(zipStream,filePath,fileName) __open_zip_entry(zipStream,fileName) __fwrite_zip_entry(zipStream,filePath) __close_zip_entry(zipStream) class Zip block Zip(path,mode) zipPath =path streamType =mode internalOpen() block getStream() return theZip block getMode() if streamType ==ZIP_WRITE return "Write Mode" elif streamType ==ZIP_APPEND return "Append Mode" elif streamType ==ZIP_READ return "Read mode" end block addFile(filePath,fileName) addFileToZip(theZip,filePath,fileName) block extractAll(extractFolder) __extract_zip(getPath(),extractFolder) block toPath() return new Path(zipPath) block getPath() return zipPath block setMode(mode) closeZip() streamType =mode internalOpen() block isStreamOpen() return isStreamOpen block closeZip() if isStreamOpen()__close_zip(getStream())end isStreamOpen =false block isZip() return "yea it zip ;)" private zipPath ="" theZip =null streamType =ZIP_WRITE isStreamOpen =false block internalOpen() isStreamOpen =true theZip =__open_zip(getPath(),streamType)