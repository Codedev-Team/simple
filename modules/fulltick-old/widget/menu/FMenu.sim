  module fulltick.widget.menu call "../FBox.sim" ?fulltick.widget callModule("string_savant") class FMenu :FBox MENU_WIDGET_SELECTION_COLOR =new FColor  MENU_WIDGET_TEXT_COLOR =new FColor  MENU_WIDGET_DOWN_BOX_TYPE =2  block addItem(menuitem) try  if isList(menuitem) for a =0 to lengthOf(menuitem) - 1 addSingleItem(menuitem[a]) end else addSingleItem(menuitem) end catch  try  addSingleItem(menuitem) catch  display __err__ end end return this block addSingleItemDepreciated(menuitem) if (menuitem.isSubMenu()) for a =0 to lengthOf(menuitem.getItems())  - 1 addItemRaw(menuitem.getItems()[a].getValue(),menuitem.getItems()[a].getShortcut(),menuitem.getItems()[a].getCallback(),menuitem.getItems()[a].getUserData(),menuitem.getItems()[a].getFlag()) end else  addItemRaw(menuitem.getValue(),menuitem.getShortcut(),menuitem.getCallback(),menuitem.getUserData(),menuitem.getFlag()) end return this block addMenu(menu) subMenu =[] for a =0 to lengthOf(menu) - 1  if (isList(menu[a]))  menuLevelOne =menu[a]menuItemLevelOne =new FMenuItem(menuLevelOne[0]) if (containsChildMenus(menuLevelOne)) subMenu =menuLevelOne[getSubmenuListIndex()] addMenu(treatMenu(subMenu,menuItemLevelOne)) else  if menuLevelOne[1]!="" ||menuLevelOne[1]!=0 menuItemLevelOne.callback(menuLevelOne[1])end try if menuLevelOne[2]!="" ||menuLevelOne[2]!=0 menuItemLevelOne.setFlag(menuLevelOne[2])end catch end addSingleItem(menuItemLevelOne) end else menuItemLevelOne =new FMenuItem(menu[0]) if menu[1]!="" ||menu[1]!=0 menuItemLevelOne.callback(menu[1])end try if menu[2]!="" ||menu[2]!=0 menuItemLevelOne.setFlag(menu[2])end catch end addSingleItem(menuItemLevelOne) end end  notifyWidget() return this block addSingleItem(menuitem) addItemRaw(menuitem.getValue(),menuitem.getFlag()) assignMenuItemPointer(menuitem) menuitem.cure() __add_to_list(MENU_WIDGET_MENUITEMS_LIST,menuitem) return this block addItemRaw(value,flag) __menu___add_to_list(WIDGETPOINTER,value,flag) __add_to_list(MENU_WIDGET_MENUITEMS_LIST_VALUE,value) notifyWidget() block clear() __menu_clear(WIDGETPOINTER,0,0) notifyWidget() return this block clearSubmenuAt(index) __menu_clear(WIDGETPOINTER,1,index) notifyWidget() return this block setSelectionColor(color) try { color.getColor()MENU_WIDGET_SELECTION_COLOR =color catch MENU_WIDGET_SELECTION_COLOR =new FColor MENU_WIDGET_SELECTION_COLOR.setColorValue(color)} __menu_selection_color(WIDGETPOINTER,MENU_WIDGET_SELECTION_COLOR.getColor()) notifyWidget() return this block setDownColor(color)return setSelectionColor(color) block getSelectionColor() return MENU_WIDGET_SELECTION_COLOR block getDownColor() return MENU_WIDGET_SELECTION_COLOR block setDownBox(type) __menu_down_box(WIDGETPOINTER,type) return setSelectionColor(getSelectionColor()) block setDownBoxType()return setDownBox(type) block setBackgroundBoxType()return setDownBox(type) block findMenu(menuitem)menuItemIndex =0 if (isString(menuitem)) for a =0 to lengthOf(MENU_WIDGET_MENUITEMS_LIST_VALUE) - 1 if (MENU_WIDGET_MENUITEMS_LIST_VALUE[a]==menuitem) menuItemIndex =a break end end  else end  ret =MENU_WIDGET_MENUITEMS_LIST[menuItemIndex] return ret block setCallbackForAllmenuItems(callback) for a =0 to lengthOf(MENU_WIDGET_MENUITEMS_LIST) - 1 MENU_WIDGET_MENUITEMS_LIST[a].callback(callback) end block global() __menu_global(WIDGETPOINTER) return this block makeShortcutGlobal()return global() block insertMenuItemAt(index,menuitem) if (isString(menuitem)) tempMenuItem =new FMenuItem(menuitem) insetRawItemAt(index,tempMenuItem.getValue()) __add_to_list(MENU_WIDGET_MENUITEMS_LIST,tempMenuItem) elif (isList(menuitem)) for a =0 to lengthOf(menuitem) - 1 insertMenuItemAt(index+1,menuitem[a]) end else  insetRawItemAt(index,menuitem.getValue()) __add_to_list(MENU_WIDGET_MENUITEMS_LIST,menuitem) end return this block insetRawItemAt(index,value) __menu_insert(WIDGETPOINTER,index,value) __add_to_list(MENU_WIDGET_MENUITEMS_LIST_VALUE,value) notifyWidget() block lastSelectedMenuItemValue()return __menu_selected_menu_item_value(WIDGETPOINTER) block mode(index,mode) __menu_mode(WIDGETPOINTER,index,mode) notifyWidget() return this block setModeAt(index,mode)return mode(index,mode) block getModeAt(index)return __menu_mode(WIDGETPOINTER,index,-101) block getLastSelectedItem() index =0 for a =0 to lengthOf(MENU_WIDGET_MENUITEMS_LIST) val =MENU_WIDGET_MENUITEMS_LIST[a].getWidgetPointer()+"" internal =__menu_last_selected_menu_item(WIDGETPOINTER)+"" end return MENU_WIDGET_MENUITEMS_LIST[index] block getLastSelectedItemPointer() return __menu_last_selected_menu_item(WIDGETPOINTER) block remove(index) __menu_remove(WIDGETPOINTER,index) return this block replaceValueAt(index,value) __menu_replace(WIDGETPOINTER,index,value) return this block setonly(menuitem) __menu_setonly(WIDGETPOINTER,menuitem.getWidgetPointer()) return this block setMenuItemShortcutAt(index,shortcut) __menu_shortcut(WIDGETPOINTER,index,shortcut) return this block size()return __menu_size(WIDGETPOINTER) block text() return __menu_text(WIDGETPOINTER,-101) block textAt(index) return __menu_text(WIDGETPOINTER,index) block setTextColor(color) if (isNumber(color)) MENU_WIDGET_TEXT_COLOR =new FColor MENU_WIDGET_TEXT_COLOR.setColorValue(color) else MENU_WIDGET_TEXT_COLOR =color end __menu_text_color(WIDGETPOINTER,MENU_WIDGET_TEXT_COLOR.getColor()) notifyWidget() return this block getTextColor() return MENU_WIDGET_TEXT_COLOR block setTextFont(font) __menu_text_font(WIDGETPOINTER,font) notifyWidget() return this block setTextSize(size) MENU_WIDGET_TEXT_SIZE =size __menu_text_size(WIDGETPOINTER,MENU_WIDGET_TEXT_SIZE) notifyWidget() return this block getTextSize() return MENU_WIDGET_TEXT_SIZE block getIndexOfLastSelectedItem() return __menu_value(WIDGETPOINTER,-1,null) block getIndexOf(menuitem) return __menu_value(WIDGETPOINTER,-101,menuitem.getWidgetPointer()) private  SUBMENU_LIST_INDEX =2  MENU_WIDGET_MENUITEMS_LIST =[] MENU_WIDGET_MENUITEMS_LIST_VALUE =[] block containsChildMenus(submenu) if (lengthOf(submenu)>3 &&isList(submenu[3]))SUBMENU_LIST_INDEX =3 return true elif (lengthOf(submenu)>2 &&isList(submenu[2]))SUBMENU_LIST_INDEX =2 return true elif (lengthOf(submenu)>1 &&isList(submenu[1]))SUBMENU_LIST_INDEX =1 return true end return false block getSubmenuListIndex() return SUBMENU_LIST_INDEX block treatMenu(submenu,parentitem) for a =0 to lengthOf(submenu) - 1 submenu[a][0]=parentitem.getValue()+"/"+submenu[a][0]end return submenu block assignMenuItemPointer(menuitem) menuitem.setValue(voidMenuItemParam(menuitem.getValue())) menuitemPointer =__menu_find_menu_item(WIDGETPOINTER,menuitem.getValue()) menuitem.setWidgetPointer(menuitemPointer) block voidMenuItemParam(value) value =__substr(value,"_","")value =__substr(value,"\'","") value =__substr(value,'\',"")value =__substr(value,"&","") return value