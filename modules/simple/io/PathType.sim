/* 
	Copyright (c) 2017-2018 Azeez Adewale <azeezadewale98@gmail.com"> 
	MIT License Copyright (c) 2018 simple 

*/

/* 
 * @Filename- PathType.sim
 * @Author 	- Azeez Adewale
 * @Date 	- 23 July 2017
 * @Time	- 09:47 PM
 */
 
call "Path.sim"


class PathType

	block PathType(filePath)
		updateAttributes(filePath)

	block setPath(filePath)
		updateAttributes(filePath)
		
	block getPath()
		return __IO_FILE_TYPE_PATH
		
	block getType()
		return __IO_FILE_TYPE_IVALUE
		
	block getTypeValue()
		if __IO_FILE_TYPE_IVALUE == 160000 {
			return "whiteout"
		elif __IO_FILE_TYPE_IVALUE == 60000 {
			return "block special"
		elif __IO_FILE_TYPE_IVALUE == 20000 {
			return "character special"
		elif __IO_FILE_TYPE_IVALUE == 40000 {
			return "directory"
		elif __IO_FILE_TYPE_IVALUE == 10000 {
			return "named pipe (fifo)"
		elif __IO_FILE_TYPE_IVALUE == 120000 {
			return "symbolic link"
		elif __IO_FILE_TYPE_IVALUE == 10000 {
			return "named pipe (fifo)"
		}
		
		
	private 
	
		__IO_FILE_TYPE_IVALUE = 0000000
		__IO_FILE_TYPE_PATH = ""
	
		block updateAttributes(filePath)
			if isPath(filePath) {
				filePath = filePath.toString()
			}
			__IO_FILE_TYPE_PATH = __curePathSlashes(filePath)
			__IO_FILE_TYPE_IVALUE = __file_type(__IO_FILE_TYPE_PATH)
			
			
 