module simple.debugging call "Debug.sim" __DEBUG_FINAL_ERROR_EMPTY ="The error can never be empty: forcing exit of the program" __DEBUG_TYPE_THROW_ONLY =0 __DEBUG_TYPE_THROW =1  block throw(errorvalue) if errorvalue ="" { errorvalue ="Unknown Error occured"} __throw(errorvalue) if isLinux(){@crlf} __exit__ block throwOnly(errorvalue) if errorvalue ="" { errorvalue ="Unknown Error occured"} __throw(errorvalue) if isLinux(){@crlf} block throwWithTitle(title,errorvalue) __throwWithTitle(title,errorvalue,__DEBUG_TYPE_THROW) block throwOnlyWithTitle(title,errorvalue) __throwWithTitle(title,errorvalue,__DEBUG_TYPE_THROW_ONLY) block __throwWithTitle(title,errorvalue,type) finalErrorValue ="" if title =="" { finalErrorValue +="" else finalErrorValue +=title} finalErrorValue +=" : " if errorvalue =="" { finalErrorValue +="Unknown Error Occur" else finalErrorValue +=errorvalue} if finalErrorValue =="" { throw(__FINAL_ERROR_EMPTY) __exit__} if type ==__DEBUG_TYPE_THROW_ONLY { throwOnly(finalErrorValue) else throw(finalErrorValue)}